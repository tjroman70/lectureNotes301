HW 4 due Tues Sep 30

Reminder: link format, not modifying premises/conclusion

////////////////////////////

Today:

- negation rules
- natural deduction proof strategies

////////////////////////////////

Reminder: NegE


        P    ¬P
NegE: ----------
          F


Syntax:

a ( p  ) by Justification,
b ( ¬p ) by Justification,
c ( F  ) by NegE(a, b)


//////////////////////////////////

Reminder: NegI

        SubProof(
            Assume( P ),
          ... F
        )
NegI: ------------------
              ¬P


Syntax:

a SubProof(
    b Assume( p ),
    ...
    c ( F ) by Justification
),
d ( ¬p ) by NegI(a)

//////////////////////////

Practice rules so far: 

not1.sc, not2.sc, not3.sc

////////////////////////////////

Bottom-elimination:

               F
BottomE:  ----------
               Q


//how does this make logical sense?

(think about what we are proving with an argument --
    IF all the premises are true,
    THEN we promise the conclusion is true)




Proof by contradiction (reductio ad absurdum):

        SubProof(
            Assume(¬P),
            ...
            F
        )
PbC:  -------------------
          P


--> Difference between NegI and PbC?

///////////////////////////////////

First example.

I go for a walk or I get coffee
I don't go for a walk.

Conclusion?



( p ∨ q, ¬p ) ⊢ ( q )
Proof(
    1 ( p ∨ q )     by Premise,
    2 ( ¬p )        by Premise,


)


//////////////////////////////////

( ¬¬p ) ⊢ ( p )
Proof(
    1 ( ¬¬p )   by Premise,


)




///////////////////////////////////


( ¬q → ¬p ) ⊢ ( p → q )         //not4.sc


//////////////////////////////////

(in-class quiz)


//////////////////////////////////


( ¬(¬p ∨ ¬q) ) ⊢ ( p ∧ q )     //not5.sc




//////////////////

How do we approach proofs?

1. Write out all the premises
2. Extract all information from premises 
3. Look at what you are trying to prove (what do we look for in goal/conclusion?)

    ∧ - 

    ∨ - 

    → - 

    ¬(something) - 

    just a propositional atom? 


After each claim - 



Inside a subproof - 



Doesn't fit a pattern or doesn't work out from above?




--> when do we open a subproof?





--> can we assume anything in a subproof? 



/////////////////////////////////

HW 4.

#1: p ∨ q, p → a ∨ b, q → a ∨ b, a → c, b → c ⊢ c
    first step?


#2: (p → q) ∨ (p → r) ⊢ p → q ∨ r
    first step?

#3: p ∧ q → r ⊢ p → (q → r)
    first step?

#4: ¬(p ∨ q) ⊢ ¬p ∧ ¬q
    first step?


#5: p → a ∨ b, a → d, q → ¬b, p ∧ q ⊢ d
    first step?



(we'll quickly discuss #6/#7 next Tuesday)

/////////////////////////////////

Next time:
- putting everything together
- proving theorems with deduction
- soundness and completeness
- proving equivalence
- begin sets