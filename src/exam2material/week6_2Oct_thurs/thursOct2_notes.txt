HW 5 due Tuesday, October 7

--> check link format

(this assignment does NOT use the Logika proof checker)

///////////////////////////////

How to get more practice?

lecture
past homework assignments
review all the proof rules 
textbook examples
old in-class quizzes
take "practice quizzes" in Canvas



///////////////////////////////

Today:
- set builder notation
- set operations + Venn diagrams
- quantifiers
- limitations of propositional logic
- begin predicate logic


//////////////////////////////

Reminder: set builder notation

{x : conditions}


{x : x ∈ ℤ, x^2 <= 25}


{-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5}

//////////////////////////////

Describe these sets in set builder notation


{5,10,15}

{x : x = 5k, k ∈ ℕ, k <= 3}


{CIS 115, CIS 116, CIS 200, CIS 300, CIS 301}

{x : x is in the CS preprofessional program}



{2,4,8,16,32}

{x : x = 2^k, k ∈ ℕ, k <= 5}


///////////////////////////////////////
∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

///////////////////////////////////////

Set union, ⋃

The union of the sets A and B, written A ⋃ B, is the set
of all elements....that are in either A or B (or both),


How could we express in set builder notation?

A ⋃ B = {x : x ∈ A ⋁ x ∈ B}


Show as a Venn diagram.

//////////////////////////////////////
⋃ ⋂ ⋁ ⋀ ∈ ∉
///////////////////////////////////////

Set intersection, ⋂

The intersection of the sets A and B, written A ⋂ B, is the set
of all elements that are...in both A and B


How could we express in set builder notation?

A ⋂ B = {x : x ∈ A ⋀ x ∈ B}


Show as a Venn diagram.

///////////////////////////////////////

Set difference, -

/ or \ (means the same thing)

The difference between the sets A and B, written A - B, 
    is the set of all elements...that are in A but not in B


How could we express in set builder notation?

A - B = {x : x ∈ A ⋀ x ∉ B}


Show as a Venn diagram.

//////////////////////////////////////
⋃ ⋂ ⋁ ⋀ ∈ ∉
///////////////////////////////////////

A = {1,3,7,10,11,12}
B = {2,3,4,5,6,7}

Find:

A ⋃ B = {1,2,3,4,5,6,7,10,11,12}
A ⋂ B = {3,7}
A - B = {1,10,11,12}      {1,10,11,12}
B - A = {24,5,6}


/////////////////

Draw a Venn diagram for A ⋃ (B ⋂ C)


Draw a Venn diagram for (A ⋂ B) − C


Draw Venn diagrams for A ⋃ (B ⋂ C) and (A ⋃ B) ⋂ (A ⋃ C)

///////////////////////////////////////
∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

///////////////////////////////////////

How does A - B relate to A ⋂ B?

A - B = A -  A ⋂ B


What do we know if A ⋂ B = A ⋃ B?

A and B are the same (A = B)



What do we know if A - B = A?

A ⋂ B = ∅




What do we know if A - B = B - A?

A and B are the same
A - B = B - A = ∅



//////////////////

Subset - A is a subset of B, written A ⊆ B, if
    all elements in A are also in B.

(We say A ⊂ B if A is a subset of B but A ≠ B.)




Example:

A = {1,3,4}

B = {1,3,5,8}

--> is A a subset of B? no (A has 4 which is not in B)






A = {8,1,3}

B = {1,3,5,8}

--> is A a subset of B? yes, all elements from A are in B


//////////////////////////////////

Quantifiers - helps describe all or some elements in a set

    ∀ - universal quantifier, read as "for all"

    ∃ - existential quantifier, read as "there exists"



Can we define that set A is a subset of set B using quantifiers?

A ⊆ B means ...

∀ x ∈ A → x ∈ B




How could we define that set A equals set B using quantifiers?

A = B 
A ⊆ B ⋀ B ⊆ A

(∀ x ∈ A → x ∈ B) ⋀ (∀ x ∈ B → x ∈ A)


//////////////////////////////////////

∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

//////////////////////////////////////

(we will come back to sets in a couple of weeks to
do proofs with them)

//////////////////////////////////////

(in-class quiz)

//////////////////////////////////////

A predicate is a boolean function that represents whether
    an individual has a particular property


Set builder notation: {x : P(x)}

where P(x) is a statement (a predicate) involving x




The set is all such x where P(x) is true

//////////////////////////////////////

Example:

A = {x : x ∈ ℕ ⋀ x^2 ≥ 25 }




P(x) = x ∈ ℕ ⋀ x^2 ≥ 25

What are these saying? Are they true?

P(2) = false
P(-6) = false 
P(10) = true

Is 2 in A? Is -6? Is 10?




//////////////////////////////////////

Limitations of propositional logic:

Premises:
    All humans are mortal.
    Socrates is human.

Conclusion
    Therefore, Socrates is mortal.



How would we prove this in propositional logic?

What propositional atoms?

p: all humans are mortal
q: Socrates is human
r: Socrates is mortal


p, q ⊢ r



///////////////

Predicate logic:

Instead of propositions, we will make claims about
individuals in a domain (a set)


These claims will involve predicates and quantifiers

Human(x)
Mortal(x)


∀ x Human(x) → Mortal(x)

//////////////////

More with predicates.

Example:

    Domain: {x : x is a student at K-State}
    C(x): whether x is in CIS 301

    Bob is taking: CIS 300, ECE 241, MATH 221, ENGL 200
    Jill is taking: CIS 301, MATH 510, HIST 251, MUSIC 170


    What is the value of C(Bob)? false

    What is the value of C(Jill)? true

    What is the value of C(Bob) ⋀ C(Jill)? false

////////////////
∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥
////////////////

Quantifiers and predicates

Domain: {strawberry, blueberry, banana, orange, 
            grapefruit, apple}

Berry(x): x is a berry (has berry in the name)
Citrus(x): x is a citrus fruit
Peel(x): x has a peel (that needs to be removed before eating)
Seeds(x): x contains inedible seeds
Bite(x): x is bite-sized

Berry(strawberry) -  true
Citrus(strawberry) - false
Peel(strawberry) - false
Seeds(strawberry) - false
Bite(strawberry) - true



Write each statement in English. Is each one true or false?

∀ x (Berry(x))

All our fruits are berries

    --> how could we express the same statement in our domain
    WITHOUT a quantifier?


Berry(strawberry) ⋀ Berry(blueberry) ⋀  .... ⋀  Berry(apple)

false


///

∃ x (Citrus(x) ⋀ Seeds(x))

    --> how could we express the same statement in our domain
    WITHOUT a quantifier?

There is a fruit that both citrus and has inedible seeds.

(Citrus(strawberry) ⋀ Seeds(strawberry)) ⋁ ... ⋁ (Citrus(apple) ⋀ Seeds(apple))

true (orange/grapefruit)

///

∀ x (Berry(x) ⋀ Bite(x))


All fruits are both berries and bite-sized.

false
banana 


///

∀ x (Berry(x) → Bite(x))

All berries are bite-sized.

(Berry(strawberry) → Bite(strawberry)) ⋀ ... ⋀  (Berry(apple) → Bite(apple))

true (assuming non-giant strawberries)

///

¬(∀ x Peel(x))


Not all fruits have a peel.

(vs All fruits don't have a peel)

NOT saying the same thing

Can you think of another way to write the same thing?


¬(Peel(strawberry) ⋀ Peel(blueberry) ⋀ ... ⋀ Peel(apple))

¬Peel(strawberry) ⋁  ¬Peel(blueberry) ⋁...⋁  ¬Peel(apple)

∃ x (¬Peel(x))





//////////////////////////////////////////

<-- stopped here, will continue on Tuesday

//////////////////////////////////////////
///

¬(∀ x (Seeds(x) → Citrus(x)))


Can you think of another way to write the same thing?



///

∀ x ¬Peel(x)




///

¬(∃ x Berry(x))



///

¬(∃ x (Peel(x) ⋀ Citrus(x)))




///

∃ x ¬(Peel(x) ⋀ Seeds(x))




///

∃ x (Citrus(x) → Berry(x))




/////////////////

For all: usually connect with...

There exists: usually connect with...

/////////////////

Next time:
- quantifiers with sets of numbers
- translations involving multiple variables/quantifiers
- DeMorgan's laws for quantifiers
- begin natural deduction in predicate logic
